You're a senior full-stack developer tasked with building a minimalistic Windows desktop app that tracks screen time per application. The app must use native WinUI 3 (with the Windows App SDK) in C# and .NET 6+ for a truly native Windows experience.

Project Requirements:

Platform & Tech Stack:

Develop a native Windows 11 application using WinUI 3 and the Windows App SDK.
Use C# and .NET 6 or later.
Integrate native Windows API calls (via P/Invoke) to track active window usage.
Active Window Tracking:

Implement tracking of the currently active window using Windows APIs (like GetForegroundWindow and GetWindowText).
Poll the system to determine which app is in focus and record the duration.
Data Persistence:

Log screen time data with timestamps.
Store data using SQLite (leveraging Microsoft.Data.Sqlite) or a JSON file for simplicity.
UI & Visualization:

Build a dashboard using WinUIâ€™s XAML controls to display charts and tables summarizing screen time.
Use native WinUI controls or integrate a compatible charting library to visualize data.
Packaging & Deployment:

Package the app as an MSIX for smooth Windows distribution.
Provide deployment instructions.
Documentation & Deliverables:

Offer a detailed, step-by-step guide with code snippets and configuration examples covering:
Setting up a WinUI 3 project.
Implementing active window tracking with native Windows API calls.
Data logging and persistence.
Building the dashboard UI.
Packaging and deploying the app.
Maintain a clear, technical, yet friendly tone.

We are working in Cursor AI. not visual studio 2022 so keep this in mind

Dont use anything WPF related. Only WinUI 3

Present an overview of what you will do.

Do not generate any code until I tell you to proceed!

Follow the official Microsoft documentation and ASP.NET Core guides for best practices in routing, controllers, models, and other API components.
